name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies 
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8==7.2.0 flake8-isort==6.1.2 isort==6.0.1
          pip install -r ./backend/requirements.txt 
      - name: Run isort
        run: |
          python -m isort --settings-file ./isort.cfg --atomic backend/
      - name: Run flake8
        run: |
          python -m flake8 --config=setup.cfg --ignore=I001,I004,I005 backend/
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /static/static/

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Деплой успешно выполнен!
          Автор push - ${{ github.actor }},
          Коммит - ${{ github.event.commits[0].message }}
          Посмотреть коммит - https://github.com/${{ github.repository }}/commit/${{github.sha}}
